<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no" />
    <title>ArcGIS Developer Guide: Forward geocoding</title>

    <!-- ArcGIS Mapping APIs and Location services Developer Guide
    Learn more: https://developers.arcgis.com/documentation/mapping-apis-and-chauffeurs/search/
    -->
    <style>
      html,
      body,
      #viewDiv {
        padding: 0;
        margin: 0;
        height: 100%;
        width: 100%;
      }
    </style>

    <link rel="stylesheet" href="https://js.arcgis.com/4.25/esri/themes/light/main.css" />
    <script src="https://js.arcgis.com/4.25/"></script>
  </head>

  <body>
    <div id="viewDiv"></div>
  </body>

  <script>
    require([
      "esri/config",
      "esri/Map",
      "esri/views/MapView",
      "esri/Graphic",
      "esri/rest/locator/Locator",
    ], (esriConfig, Map, MapView, Graphic, Locator) => {
      esriConfig.apiKey =
        "AAPK6a0f7035fa604bb1bea220848315aabeCDcUbU65WFdPdAgsiZMx85rchhpRDaUzELPMpNkzlohQDk9PHfA6qiekQQdsMIY-";

      const map = new Map({
        basemap: "arcgis-navigation", //Basemap layer service
      });

      const view = new MapView({
        container: "viewDiv",
        map: map,
        constraints: {
          snapToZoom: false,
        },
      });

      view.popup.actions = [];

      view.when(() => {
        const geocodingUrl =
          "https://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer";
        const locator = new Locator({ url: geocodingUrl });

        const address = "Enter your address here";

        const params = {
          address: {
            SingleLine: address,
          },
        };

        locator.addressToLocations(params).then((results) => {
          showResult(results);
        });

        function showResult(results) {
          if (results.length) {
            const result = results[0];
            console.log(result.address);
            view.graphics.add(
              new Graphic({
                symbol: {
                  type: "simple-marker",
                  color: "#000000",
                  size: "12px",
                  outline: {
                    color: "#ffffff",
                    width: "1px",
                  },
                },
                geometry: result.location,
                attributes: {
                  title: "Address",
                  address: result.address,
                  score: result.score,
                },
                popupTemplate: {
                  title: "{title}",
                  content:
                    result.address +
                    "<br><br>" +
                    result.location.longitude.toFixed(5) +
                    "," +
                    result.location.latitude.toFixed(5),
                },
              })
            );
            if (results.length) {
              const g = view.graphics.getItemAt(0);
              view.popup.open({
                features: [g],
                location: g.geometry,
              });
            }
            view.goTo({
              target: result.location,
              zoom: 13,
            });
          }
        }
      });
    });
  </script>
</html>
